<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    namespace：名称空间
-->
<mapper namespace="com.vcampus.database.mapper.Mapper">


    <update id="createDatabase">
            CREATE DATABASE IF NOT EXISTS vcampus_db
        CHARACTER SET utf8mb4
        COLLATE utf8mb4_unicode_ci
    </update>

    <update id="dropDatabase">
        DROP DATABASE IF EXISTS vcampus_db
    </update>

    <update id="dropTables">
        DROP TABLE IF EXISTS vcampus_db.tb_email;
        DROP TABLE IF EXISTS vcampus_db.tb_course_selections;
        DROP TABLE IF EXISTS vcampus_db.tb_class_sessions;
        DROP TABLE IF EXISTS vcampus_db.tb_courses;
        DROP TABLE IF EXISTS vcampus_db.tb_balance;
        DROP TABLE IF EXISTS vcampus_db.tb_favorite;
        DROP TABLE IF EXISTS vcampus_db.tb_order;
        DROP TABLE IF EXISTS vcampus_db.tb_product;
        DROP TABLE IF EXISTS vcampus_db.tb_password_reset_application;
        DROP TABLE IF EXISTS vcampus_db.tb_borrow_log;
        DROP TABLE IF EXISTS vcampus_db.tb_book;
        DROP TABLE IF EXISTS vcampus_db.tb_student;
        DROP TABLE IF EXISTS vcampus_db.tb_user;
    </update>

    <update id="InsertTempData">
        <!-- 批量插入固定用户数据（userId和password均为7位数字字符串） -->
        INSERT INTO vcampus_db.tb_user (userId, password)
        VALUES
        ('1234567', '7654321'),  <!-- 字符串类型需用单引号包裹 -->
        ('2345678', '8765432'),
        ('3456789', '9876543'),
        ('4567890', '0987654'),
        ('5678901', '1098765')

        INSERT INTO vcampus_db.tb_student (userId, studentId, cardId, name, gender, college, major, grade, birth_date, native_place, politics_status, student_status)
        VALUES
            ('1234567', '20210001', '123456789', '张三', '男', '计算机学院', '计算机科学与技术', 2021, '2003-09-01', '北京市', '共青团员', '在读'),
            ('2345678', '20210002', '987654321', '李四', '女', '电子工程学院', '电子信息工程', 2021, '2003-10-15', '上海市', '共青团员', '在读'),
            ('3456789', '20220001', '112233445', '王五', '男', '数学学院', '数学与应用数学', 2022, '2004-05-20', '广州市', '群众', '在读'),
            ('4567890', '20230001', '556677889', '赵六', '女', '文学院', '汉语言文学', 2023, '2005-02-10', '成都市', '共青团员', '在读')
    </update>

    <update id="createUserTable">
        <!-- 显式指定在 Vcampus_db 数据库下创建 user 表 -->
        CREATE TABLE IF NOT EXISTS vcampus_db.`tb_user` (
        `userId` VARCHAR(50) NOT NULL COMMENT '用户ID（7位数字字符串）',
        `password` VARCHAR(100) NOT NULL COMMENT '密码（7位数字字符串）',
        PRIMARY KEY (`userId`) -- 建议加主键，避免重复插入
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

    </update>

    <update id="createStudentTable">
        CREATE TABLE IF NOT EXISTS vcampus_db.`tb_student` (
        `userId` VARCHAR(64) NOT NULL PRIMARY KEY COMMENT '用户ID（主键）',
        `studentId` CHAR(8) COMMENT '学号（8位数字）',
        `name` VARCHAR(50) NOT NULL COMMENT '姓名',
        `gender` VARCHAR(10) COMMENT '性别',
        `college` VARCHAR(100) COMMENT '学院',
        `major` VARCHAR(100) COMMENT '专业',
        `grade` INT COMMENT '年级（如 2023）',
        `birth_date` DATE COMMENT '出生日期',
        `native_place` VARCHAR(100) COMMENT '籍贯',
        `politics_status` VARCHAR(50) COMMENT '政治面貌',
        `student_status` VARCHAR(50) COMMENT '学籍状态',
        `phone` VARCHAR(20) COMMENT '手机号',
        `email` VARCHAR(100) COMMENT '电子邮箱',
        `dormAddress` VARCHAR(200) COMMENT '宿舍地址',
        `fatherName` VARCHAR(50) COMMENT '父亲姓名',
        `fatherPhone` VARCHAR(20) COMMENT '父亲电话',
        `fatherPoliticsStatus` VARCHAR(50) COMMENT '父亲政治面貌',
        `fatherWorkUnit` VARCHAR(100) COMMENT '父亲工作单位',
        `motherName` VARCHAR(50) COMMENT '母亲姓名',
        `motherPhone` VARCHAR(20) COMMENT '母亲电话',
        `motherPoliticsStatus` VARCHAR(50) COMMENT '母亲政治面貌',
        `motherWorkUnit` VARCHAR(100) COMMENT '母亲工作单位'
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='学生信息表（以userId为主键）';
    </update>
    <update id="createStudentLeaveApplicationTable">
        CREATE TABLE IF NOT EXISTS vcampus_db.tb_student_leave_application (
        application_id INT NOT NULL AUTO_INCREMENT COMMENT '申请ID（主键）',
        student_id VARCHAR(50) NOT NULL COMMENT '学生ID（userId）',
        student_name VARCHAR(50) NOT NULL COMMENT '学生姓名',
        type VARCHAR(20) NOT NULL COMMENT '申请类型：休学/复学',
        reason TEXT COMMENT '申请理由',
        status VARCHAR(20) NOT NULL DEFAULT '待审批' COMMENT '申请状态：待审批/已批准/已拒绝',
        create_time DATETIME NOT NULL COMMENT '申请时间',
        PRIMARY KEY (application_id),
        INDEX idx_student_id (student_id),
        FOREIGN KEY (student_id) REFERENCES tb_student(userId) ON DELETE CASCADE
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='学生学籍异动申请表';
    </update>
    <!-- 创建教师信息表 -->
    <update id="createTeacherTable">
        CREATE TABLE IF NOT EXISTS vcampus_db.`teacher` (
        `userId` VARCHAR(50) NOT NULL COMMENT '教师用户ID（主键）',
        `teacherId` CHAR(8) COMMENT '教师工号（8位数字）',
        `name` VARCHAR(50) NOT NULL COMMENT '姓名',
        `gender` VARCHAR(10) COMMENT '性别',
        `college` VARCHAR(100) COMMENT '学院',
        `department` VARCHAR(100) COMMENT '系/部门',
        `title` VARCHAR(50) COMMENT '职称',
        `phone` VARCHAR(20) COMMENT '手机号',
        `email` VARCHAR(100) COMMENT '电子邮箱',
        `birth_date` DATE COMMENT '出生日期',
        `politics_status` VARCHAR(50) COMMENT '政治面貌',
        `office` VARCHAR(100) COMMENT '办公室',  -- 新增
        PRIMARY KEY (`userId`)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='教师信息表（以userId为主键）';

    </update>

    <update id="createBookTable">
        CREATE TABLE IF NOT EXISTS vcampus_db.`tb_book` (
                                                            `book_id`       VARCHAR(50) NOT NULL PRIMARY KEY COMMENT '图书ID',
            `book_name`     VARCHAR(255) NOT NULL COMMENT '书名',
            `author`        VARCHAR(100) NOT NULL COMMENT '作者',
            `isbn`          VARCHAR(20) UNIQUE COMMENT 'ISBN号',
            `publisher`     VARCHAR(100) COMMENT '出版社',
            `description`   TEXT COMMENT '描述',
            `borrow_status` VARCHAR(20) NOT NULL DEFAULT '在馆' COMMENT '借阅状态'
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
    </update>
    <update id="createBorrowLogTable">
        CREATE TABLE IF NOT EXISTS vcampus_db.`tb_borrow_log` (
                                                                  `log_id`      VARCHAR(50) NOT NULL PRIMARY KEY,
            `book_id`     VARCHAR(50) NOT NULL,
            `book_name`   VARCHAR(255) NOT NULL,
            `user_id`     VARCHAR(50) NOT NULL,
            `username`    VARCHAR(100) NOT NULL,
            `borrow_date` DATE NOT NULL,
            `due_date`    DATE NOT NULL,
            `return_date` DATE DEFAULT NULL,  -- I strongly recommend adding this column

        -- Move the constraint definition here, before the closing parenthesis
            CONSTRAINT `fk_borrow_log_user`
            FOREIGN KEY (`user_id`)
            REFERENCES `tb_user`(`userId`)
            ON DELETE CASCADE
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
    </update>










    <update id="createPasswordResetApplicationTable">
        CREATE TABLE IF NOT EXISTS vcampus_db.tb_password_reset_application (
            userId VARCHAR(50) NOT NULL COMMENT '申请密码重置的用户ID（7位数字字符串）',
            newPassword VARCHAR(50) NOT NULL COMMENT '新密码',
            submitTime DATETIME NOT NULL COMMENT '用户提交申请的时间',
            PRIMARY KEY (userId),
            INDEX idx_userId (userId),
            INDEX idx_submitTime (submitTime)
        ) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic COMMENT = '密码重置申请表';
    </update>


    <!-- 创建商品表 -->
    <update id="createProductTable">
        CREATE TABLE IF NOT EXISTS vcampus_db.`tb_product` (
            `id` BIGINT NOT NULL AUTO_INCREMENT COMMENT '商品ID（主键）',
            `name` VARCHAR(100) NOT NULL COMMENT '商品名称',
            `price` DECIMAL(10,2) NOT NULL COMMENT '商品价格',
            `stock` INT NOT NULL DEFAULT 0 COMMENT '商品库存',
            `description` TEXT COMMENT '商品描述',
            `imagePath` VARCHAR(500) COMMENT '商品图片路径',
            `status` ENUM('ON_SALE', 'OFF_SHELF') NOT NULL DEFAULT 'ON_SALE' COMMENT '商品状态',
            `createTime` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
            `updateTime` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
            PRIMARY KEY (`id`),
            INDEX `idx_name` (`name`),
            INDEX `idx_status` (`status`)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='商品信息表';
    </update>

    <!-- 创建订单表 -->
    <update id="createOrderTable">
        CREATE TABLE IF NOT EXISTS vcampus_db.`tb_order` (
            `orderId` VARCHAR(50) NOT NULL COMMENT '订单ID（主键）',
            `userId` VARCHAR(50) NOT NULL COMMENT '用户ID',
            `productId` BIGINT NOT NULL COMMENT '商品ID',
            `quantity` INT NOT NULL DEFAULT 1 COMMENT '购买数量',
            `priceAtPurchase` DECIMAL(10,2) NOT NULL COMMENT '购买时的商品单价',
            `totalPrice` DECIMAL(10,2) NOT NULL COMMENT '订单总价',
            `orderStatus` ENUM('UNPAID', 'PAID', 'CANCELLED', 'RETURN_REQUESTED', 'RETURNED') NOT NULL DEFAULT 'UNPAID' COMMENT '订单状态',
            `createTime` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '订单创建时间',
            `payTime` TIMESTAMP NULL COMMENT '支付完成时间',
            PRIMARY KEY (`orderId`),
            INDEX `idx_userId` (`userId`),
            INDEX `idx_productId` (`productId`),
            INDEX `idx_orderStatus` (`orderStatus`),
            INDEX `idx_createTime` (`createTime`),
            FOREIGN KEY (`productId`) REFERENCES `tb_product`(`id`) ON DELETE CASCADE
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='订单信息表';
    </update>

    <!-- 创建收藏表 -->
    <update id="createFavoriteTable">
        CREATE TABLE IF NOT EXISTS vcampus_db.`tb_favorite` (
            `id` BIGINT NOT NULL AUTO_INCREMENT COMMENT '收藏记录ID（主键）',
            `userId` VARCHAR(50) NOT NULL COMMENT '用户ID',
            `productId` BIGINT NOT NULL COMMENT '商品ID',
            `addTime` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '收藏时间',
            PRIMARY KEY (`id`),
            UNIQUE KEY `uk_user_product` (`userId`, `productId`) COMMENT '用户-商品唯一约束',
            INDEX `idx_userId` (`userId`),
            INDEX `idx_productId` (`productId`),
            INDEX `idx_addTime` (`addTime`),
            FOREIGN KEY (`productId`) REFERENCES `tb_product`(`id`) ON DELETE CASCADE
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='用户收藏表';
    </update>

    <!-- 创建课程表 -->
    <update id="createCoursesTable">
        CREATE TABLE IF NOT EXISTS vcampus_db.tb_courses (
                                               courseId    VARCHAR(255) PRIMARY KEY,
            courseName  VARCHAR(255) NOT NULL,
            courseType  VARCHAR(50),
            department  VARCHAR(255)
            );
    </update>

    <!-- 创建教学班表 -->
    <update id="createClassSessionsTable">
        CREATE TABLE IF NOT EXISTS vcampus_db.tb_class_sessions (
                                                      sessionId     VARCHAR(255) PRIMARY KEY,
            courseId      VARCHAR(255) NOT NULL,
            teacherName   VARCHAR(255),
            scheduleInfo  TEXT,
            capacity      INT DEFAULT 0,
            enrolledCount INT DEFAULT 0,
            FOREIGN KEY (courseId) REFERENCES tb_courses(courseId) ON DELETE CASCADE
            );
    </update>

    <!-- 创建课程选择表 -->
    <update id="createCourseSelectionsTable">
        CREATE TABLE IF NOT EXISTS vcampus_db.tb_course_selections (
                                                         selectionId INT AUTO_INCREMENT PRIMARY KEY,
                                                         studentId   VARCHAR(255) NOT NULL,
            sessionId   VARCHAR(255) NOT NULL,
            status      VARCHAR(50),
            UNIQUE KEY uk_student_session (studentId, sessionId),
            FOREIGN KEY (sessionId) REFERENCES tb_class_sessions(sessionId) ON DELETE CASCADE
            );
    </update>

    <!-- 创建余额表 -->
    <update id="createBalanceTable">
        CREATE TABLE IF NOT EXISTS vcampus_db.tb_balance (
            userId VARCHAR(50) NOT NULL PRIMARY KEY COMMENT '用户ID（主键）',
            balance DECIMAL(10,2) NOT NULL COMMENT '余额'
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='余额表';
    </update>

    <update id="useDatabase">
        USE ${dbName}
    </update>

    <!-- 创建邮件表 -->
    <update id="createEmailTable">
        CREATE TABLE IF NOT EXISTS vcampus_db.tb_email (
            emailId VARCHAR(50) NOT NULL PRIMARY KEY COMMENT '邮件ID（主键）',
            senderId VARCHAR(50) NOT NULL COMMENT '发送者用户ID',
            recipientId VARCHAR(50) NOT NULL COMMENT '接收者用户ID',
            subject VARCHAR(255) NOT NULL COMMENT '邮件主题',
            content TEXT COMMENT '邮件内容',
            sendTime DATETIME NOT NULL COMMENT '发送时间',
            status ENUM('DRAFT', 'SENT', 'READ') NOT NULL DEFAULT 'DRAFT' COMMENT '邮件状态',
            hasAttachment BOOLEAN NOT NULL DEFAULT FALSE COMMENT '是否有附件',
            replyToEmailId VARCHAR(50) DEFAULT NULL COMMENT '回复的邮件ID',
            INDEX idx_sender (senderId),
            INDEX idx_recipient (recipientId),
            INDEX idx_sendTime (sendTime),
            INDEX idx_status (status),
            FOREIGN KEY (senderId) REFERENCES tb_user(userId) ON DELETE CASCADE,
            FOREIGN KEY (recipientId) REFERENCES tb_user(userId) ON DELETE CASCADE,
            FOREIGN KEY (replyToEmailId) REFERENCES tb_email(emailId) ON DELETE SET NULL
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='邮件表';
    </update>


</mapper>